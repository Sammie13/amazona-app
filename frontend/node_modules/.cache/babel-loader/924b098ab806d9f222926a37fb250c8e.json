{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS, PRODUCT_REVIEW_CREATE_FAIL } from \"../constants/productConstants\";\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories`);\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/products\", {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createReview = (productId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/sam101/Desktop/amazona/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_FAIL","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","PRODUCT_REVIEW_CREATE_FAIL","listProductCategories","dispatch","type","data","get","payload","error","message","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete","createReview","review"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_CATEGORY_LIST_SUCCESS,\n  PRODUCT_CATEGORY_LIST_REQUEST,\n  PRODUCT_CATEGORY_LIST_FAIL,\n  PRODUCT_REVIEW_CREATE_REQUEST,\n  PRODUCT_REVIEW_CREATE_SUCCESS,\n  PRODUCT_REVIEW_CREATE_FAIL,\n} from \"../constants/productConstants\";\n\nexport const listProductCategories = () => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(`/api/products/categories`);\n    dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\n  }\n};\n\nexport const detailsProduct = (productId) => async (dispatch) => {\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n  try {\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      \"/api/products\",\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\n  }\n};\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\n  }\n};\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/products/${productId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\n  }\n};\nexport const createReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      `/api/products/${productId}/reviews`,\n      review,\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}