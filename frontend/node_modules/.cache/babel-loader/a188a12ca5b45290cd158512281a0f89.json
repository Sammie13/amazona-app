{"ast":null,"code":"var _jsxFileName = \"/Users/sam101/Desktop/amazona/frontend/src/screens/CartScreen.js\";\nimport React, { useEffect } from \"react\";\nexport default function CartScreen(props) {\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  useEffect(() => ({\n    if(productId) {\n      dispatch(addToCart(productId, qty));\n    }\n\n  }), []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"CartScreen\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"ADD TO CART : ProductID: \", productId, \" Qty: \", qty));\n}","map":{"version":3,"sources":["/Users/sam101/Desktop/amazona/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","CartScreen","props","productId","match","params","id","qty","location","search","Number","split","if","dispatch","addToCart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxC,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,GACRC,MAAM,CAACR,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CADE,GAER,CAFJ;AAGAX,EAAAA,SAAS,CACP,OAAO;AACLY,IAAAA,EAAE,CAACT,SAAD,EAAY;AACZU,MAAAA,QAAQ,CAACC,SAAS,CAACX,SAAD,EAAYI,GAAZ,CAAV,CAAR;AACD;;AAHI,GAAP,CADO,EAMP,EANO,CAAT;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC4BJ,SAD5B,YAC6CI,GAD7C,CAFF,CADF;AAQD","sourcesContent":["import React, { useEffect } from \"react\";\nexport default function CartScreen(props) {\n  const productId = props.match.params.id;\n  const qty = props.location.search\n    ? Number(props.location.search.split(\"=\")[1])\n    : 1;\n  useEffect(\n    () => ({\n      if(productId) {\n        dispatch(addToCart(productId, qty));\n      },\n    }),\n    []\n  );\n  return (\n    <div>\n      <h1>CartScreen</h1>\n      <p>\n        ADD TO CART : ProductID: {productId} Qty: {qty}\n      </p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}